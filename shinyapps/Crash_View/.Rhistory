"Driver.City",
"Driver.State",
"Driver.Zip.Code",
"Driver.License.State",
"Driver.DOB",
"Driver.Sex",
"Alcohol.Test.Given",
"Alcohol.Test.Type",
"Alcohol.Test.Results",
"Charge",
#  "Summons",
#  "Multi.Charge.Flag",
"Driver.Physical.Status")
col.num <- which(colnames(AllData) %in% selectCols)
FilteredData <- select(AllData,col.num)
save (FilteredData, file ="C:\\Users\\Fireseraph\\Desktop\\Work Bench\\Github\\uncrash\\uncrash\\FilteredData.Rdata")
for (yr in 2015:2015)
{
print(paste("Begin processing files for year", yr))
AccYrFile = paste0("*",yr,"Accidents.txt")
filename <-list.files(pattern=AccYrFile )
accident <-  read.csv(filename,header=FALSE,sep=",", quote="")
colnames(accident) <- c("Case.Number","County.Name","Municipality.Name",
"Crash.Date","Crash.Day.Of.Week","Crash.Time",
"Police.Dept.Code", "Police.Department",
"Police.Station", "Total.Killed", "Total.Injured",
"Pedestrians.Killed", "Pedestrians.Injured",
"Severity", "Intersection", "Alcohol.Involved",
"HazMat.Involved", "Crash.Tyep.Code",
"Total.Vehicles.Involve", "Crash.Location",
"Location.Direction", "Route", "Route.Suffix",
"SRI", "MilePost", "Road.System", "Road.Character",
"Road.Surface.Type", "Surface.Condition",
"Light.Condition", "Environmental.Condition",
"Road.Divided.By", "Temporary.Traffic.Control.Zone",
"Distance.To.Cross.Street", "Unit.Of.Measurement",
"Directn.From.Cross.Street", "Cross.Street.Name",
"Is.Ramp", "Ramp.To.From.Route.Name",
"Ramp.To.From.Route.Direction", "Posted.Speed",
"Posted.Speed.Cross.Street", "Latitude", "Longitude",
"Cell.Phone.In.Use.Flag", "Other.Property.Damage",
"Reporting.Badge.No")
accident$Crash.Time <- sprintf("%04d",accident$Crash.Time)
accident$Crash.Time <- format(strptime(accident$Crash.Time, format="%H%M"), format = "%H:%M")
print(paste0("*",yr," Accidents file extracted and cleaned"))
AccYrFile = paste0("*",yr,"Drivers.txt")
filename <-list.files(pattern=AccYrFile )
drivers <- read.csv(filename,header=FALSE,sep=",",quote="")
colnames(drivers) <-c("Case.Number",
"Vehicle.Number",
"Driver.City",
"Driver.State",
"Driver.Zip.Code",
"Driver.License.State",
"Driver.DOB",
"Driver.Sex",
"Alcohol.Test.Given",
"Alcohol.Test.Type",
"Alcohol.Test.Results",
"Charge",
"Summons",
"Multi.Charge.Flag",
"Driver.Physical.Status")
# drivers$year <- substr(drivers$Case.Number,1,4) %>% as.numeric
# drivers$age = difftime(as.Date(paste0(drivers$year,"-06-30")),drivers$Driver.DOB %>% as.Date(format = "%m/%d/%Y"),units = "weeks")/52.14
drivers$alcohol <- !is.na(drivers$Charge) & grepl("39:4-50|39-4-50|39:4:50|39:4 50|DWI|DUI", drivers$Charge) # Alcohol charge codes? How to determine?
print(paste0("*",yr," Drivers file extracted and cleaned"))
AllData <- merge(drivers,accident,by="Case.Number")
print(paste("Merged accident and driver file for year",yr))
selectCols <- c("Case.Number","County.Name","Municipality.Name",
"Crash.Date","Crash.Day.Of.Week","Crash.Time",
"Police.Dept.Code", "Police.Department",
"Police.Station", "Total.Killed", "Total.Injured",
"Pedestrians.Killed", "Pedestrians.Injured",
"Severity", "Intersection", "Alcohol.Involved",
"HazMat.Involved", "Crash.Tyep.Code",
"Total.Vehicles.Involve", "Crash.Location",
# "Location.Direction",
"Route",
# "Route.Suffix",
# "SRI",
"MilePost", "Road.System", "Road.Character",
"Road.Surface.Type", "Surface.Condition",
"Light.Condition", "Environmental.Condition",
"Road.Divided.By", "Temporary.Traffic.Control.Zone",
"Distance.To.Cross.Street", "Unit.Of.Measurement",
"Directn.From.Cross.Street", "Cross.Street.Name",
# "Is.Ramp",
# "Ramp.To.From.Route.Name",
# "Ramp.To.From.Route.Direction",
"Posted.Speed",
"Posted.Speed.Cross.Street", "Latitude", "Longitude",
"Cell.Phone.In.Use.Flag", "Other.Property.Damage",
"Reporting.Badge.No",
"Vehicle.Number",
"Driver.City",
"Driver.State",
"Driver.Zip.Code",
"Driver.License.State",
"Driver.DOB",
"Driver.Sex",
"Alcohol.Test.Given",
"Alcohol.Test.Type",
"Alcohol.Test.Results",
"Charge",
#  "Summons",
#  "Multi.Charge.Flag",
"Driver.Physical.Status")
# selectCols <- c("Case.Number","Driver.Zip.Code","age","Driver.Sex","alcohol",
#                 "County.Name","Municipality.Name",
#                 "Crash.Date","Crash.Day.Of.Week","Crash.Time",
#                 "Road.Surface.Type", "Surface.Condition",
#                 "Light.Condition", "Environmental.Condition",
#                 "Road.Divided.By", "Temporary.Traffic.Control.Zone",
#                 "Distance.To.Cross.Street", "Unit.Of.Measurement",
#                 "Posted.Speed.Cross.Street", "Latitude", "Longitude",
#                 "Cell.Phone.In.Use.Flag")
col.num <- which(colnames(AllData) %in% selectCols)
FilteredData <- select(AllData,col.num)
# save (FilteredData, file ="C:\\Users\\Fireseraph\\Desktop\\Work Bench\\Github\\uncrash\\uncrash\\FilteredData.Rdata")
# outFile = paste0("FilteredData",yr,".csv")
# write.csv(FilteredData, file = outFile)
# print(paste("Generated",outFile, "file"))
outFile = paste0("FilteredData",yr,".Rda")
save (FilteredData, file = outFile)
print(paste("Generated",outFile, "file"))
# outFile = paste0("FilteredData",yr,".Rds")
# save (FilteredData, file = outFile)
# print(paste("Generated",outFile, "file"))
}
proc.time()-ptm
rm *.txt
file.remove("*.txt")
Fatal[1:14]=0
Fatal <- vector(mode="numeric", length=14)
Fatal
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatal[yr] <- sum(Fatality$row_total)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
Fatal_total=0
Fatal <- vector(mode="numeric", length=14)
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatal[yr] <- sum(Fatality$row_total)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
Fatal
Fatal <- vector(mode="numeric", length=14)
Fatal
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatal[yr-2000] <- sum(Fatality$row_total)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
Fatal_total=0
Fatal <- vector(mode="numeric", length=14)
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatal[yr-2000] <- sum(Fatality$row_total)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
Fatal
y=2001:2014
y
year=2001:2014
fatality <- data.frame(year, Fatal)
fatality
View(Fatality)
fatality_car <- data.frame(year, Fatal)
install.packages("devtools")
install.packages("Rcpp")
library(devtools)
library(Rcpp)
install_github('ramnathv/rCharts')
install.packages("devtools")
install.packages("Rcpp")
library(devtools)
library(Rcpp)
install_github('ramnathv/rCharts')
install_github('ramnathv/rCharts')
install.packages("Rcpp")
library(Rcpp)
library(devtools)
install_github('ramnathv/rCharts')
library(rCharts)
data(fatality_car)
m1 <- mPlot(x="year",y="Fatal", type="Line", data=econ)
m1$set(pointSize=0,linewidth=1)
m1$print("chart2")
fatality_car
nPlot(Fatal ~ year, data=fatality_car, type="BarChart")
n1 <- nPlot(Fatal ~ year, data=fatality_car, type="multiBarChart")
n1$print("chart3")
nPlot(Fatal ~ year, data=fatality_car, type="multiBarChart")
outFile = paste0("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\Crash_View\\Crash_View\\data\\fatality_car.Rda")
save (fatality_car, file = outFile)
yr=2001
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
View(FilteredData2001)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed","Driver.Sex")]
View(Fatal_FilteredData)
Fatal_data <- unique(Fatal_FilteredData)
yr=2001
Fatal_total=0
Fatal <- vector(mode="numeric", length=14)
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed", "Crash.Day.Of.Week")]
View(Fatal_FilteredData)
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed,Crash.Day.Of.Week) %>% tally()
Fatality <- Fatal_data %>% group_by(Total.Killed,Crash.Day.Of.Week) %>% tally()
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
install.packages("magrittr")
library(magrittr)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
library(dplyr)
Fatality <- Fatal_data %>% group_by(Total.Killed) %>% tally()
View(Fatality)
Fatality <- Fatal_data %>% group_by(Total.Killed, Crash.Day.Of.Week) %>% tally()
Fatality
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatal[yr-2000] <- sum(Fatality$row_total)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
View(Fatality)
Fatality[which(total.killed>0),]
Fatality[which(Fatality$total.killed>0),]
Fatality[which(Fatality$Total.Killed>0),]
Fatality <- Fatal_data %>% group_by(Total.Killed, Crash.Day.Of.Week) %>% tally()[which(Fatality$Total.Killed>0),]
Fatality <- Fatality[which(Fatality$Total.Killed>0),]
Fatality
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatality
Fatal[yr-2000] <- sum(Fatality$row_total) %>% group_by(Crash.Day.Of.Week)
Fatality %>% group_by(Crash.Day.Of.Week) %>% tally(,wt=row_total)
Fatality$year <- yr
Fatality
Fatality <- Fatality %>% group_by(Crash.Day.Of.Week) %>% tally(wt=row_total)
Fatality
Fatality$year <- yr
Fatality
Fatal=data.frame()
Fatal
Fatal <- rbind(Fatal, Fatality)
Fatal
Fatal=data.frame()
Fatal
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Killed", "Crash.Day.Of.Week")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Killed, Crash.Day.Of.Week) %>% tally()
Fatality <- Fatality[which(Fatality$Total.Killed>0),]
Fatality$row_total <- Fatality$Total.Killed*Fatality$n
Fatality <- Fatality %>% group_by(Crash.Day.Of.Week) %>% tally(wt=row_total)
Fatality$year <- yr
Fatal <- rbind(Fatal, Fatality)
# Fatal[yr-2000] <- sum(Fatality$row_total) %>% group_by(Crash.Day.Of.Week)
# Fatal_total=Fatal_total+sum(Fatality$row_total)
# print(Fatal_total)
}
Fatal
View(Fatal)
View(Fatal)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=fatality_car, type="multiBarChart")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart")
??nPlot
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=0.5)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
outFile = paste0("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\Crash_View\\Crash_View\\data\\Fatal.Rda")
save (Fatal, file = outFile)
load("data/Fatal.Rda")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("C:/Users/Fireseraph/Desktop/WorkBench/Github/uncrash_jack/Crash_View/Crash_View/data/fatality_car.Rda")
View(fatality_car)
runApp()
runApp()
sum(fatality_car$Fatal)/14
runApp()
yr=2001
Fatal_total=0
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Injured", "Crash.Day.Of.Week")]
View(Fatal_FilteredData)
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Injured, Crash.Day.Of.Week) %>% tally()
View(Fatality)
Fatality <- Fatality[which(Fatality$Total.Injured>0),]
View(Fatality)
Fatality$row_total <- Fatality$Total.Injured*Fatality$n
View(Fatality)
Fatal <- vector(mode="numeric", length=14)
Fatal_total=0
View(Fatality)
Fatal[yr-2000] <- sum(Fatality$row_total) %>% group_by(Crash.Day.Of.Week)
Fatal_total=Fatal_total+sum(Fatality$row_total)
Fatal[yr-2000] <- sum(Fatality$row_total)
Fatal[yr-2000]
Fatal <- vector(mode="numeric", length=14)
Fatal
Fatal[yr-2000] <- sum(Fatality$row_total)
Fatal
Fatal <- vector(mode="numeric", length=14)
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Injured", "Crash.Day.Of.Week")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Injured, Crash.Day.Of.Week) %>% tally()
Fatality <- Fatality[which(Fatality$Total.Injured>0),]
Fatality$row_total <- Fatality$Total.Injured*Fatality$n
# Fatality <- Fatality %>% group_by(Crash.Day.Of.Week) %>% tally(wt=row_total)
# Fatality$year <- yr
# Fatal <- rbind(Fatal, Fatality)
Fatal[yr-2000] <- sum(Fatality$row_total)
# %>% group_by(Crash.Day.Of.Week)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
Fatal <- vector(mode="numeric", length=14)
Fatal_total=0
Fatal_total=0
Fatal <- vector(mode="numeric", length=14)
for (yr in 2001:2014){
load(paste("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\sandbox\\data\\FilteredData",yr,".Rda",sep=""))
assign(paste("FilteredData",yr,sep=""), FilteredData)
Fatal_FilteredData <- FilteredData[,c("Case.Number", "Total.Injured", "Crash.Day.Of.Week")]
Fatal_data <- unique(Fatal_FilteredData)
Fatality <- Fatal_data %>% group_by(Total.Injured, Crash.Day.Of.Week) %>% tally()
Fatality <- Fatality[which(Fatality$Total.Injured>0),]
Fatality$row_total <- Fatality$Total.Injured*Fatality$n
# Fatality <- Fatality %>% group_by(Crash.Day.Of.Week) %>% tally(wt=row_total)
# Fatality$year <- yr
# Fatal <- rbind(Fatal, Fatality)
Fatal[yr-2000] <- sum(Fatality$row_total)
# %>% group_by(Crash.Day.Of.Week)
Fatal_total=Fatal_total+sum(Fatality$row_total)
print(Fatal_total)
}
average.killed.per.year <- Fatal_total/14
average.killed.per.year
runApp()
bike1 <- read.csv("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\new data\\bike data\\bike_data1_0223.csv")
bike2 <- read.csv("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\new data\\bike data\\bike_data2_0447.csv")
View(bike1)
shiny::runApp()
View(fatality_car)
rCharts
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
p<- nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
p
print(p)
bike_data <- read.csv("C:\\Users\\Fireseraph\\Desktop\\WorkBench\\Github\\uncrash_jack\\new data\\bike data\\Mercer Co All Bike Crashes 2003 - 2015 downloaded Jan 13, 2016.csv")
View(bike_data)
bike_count <- bike_data %>% group_by(CRASH.YEAR) %>% tally()
bike_count <- bike_data %>% group_by(CRASH_YEAR) %>% tally()
View(bike_count)
nPlot(n ~ CRASH_YEAR, data=bike_count, type="multiBarChart",groupSpacing=5)
bike_count <- bike_data %>% group_by(CRASH_YEAR,INTERSECTION) %>% tally()
nPlot(n ~ CRASH_YEAR, group="INTERSECTION", data=bike_count, type="multiBarChart",groupSpacing=5)
bike_count_YEAR_INTERSECTION <- bike_data %>% group_by(CRASH_YEAR,INTERSECTION) %>% tally()
bike_count_YEAR_INTERSECTION <- bike_data %>% group_by(CRASH_YEAR,INTERSECTION) %>% tally()
nPlot(n ~ CRASH_YEAR, group="INTERSECTION", data=bike_count_YEAR_INTERSECTION, type="multiBarChart",groupSpacing=5)
bike_count_YEAR_ROAD_SYSTEM <- bike_data %>% group_by(CRASH_YEAR, ROAD_SYSTEM) %>% tally()
bike_count_YEAR_ROAD_SYSTEM <- bike_data %>% group_by(CRASH_YEAR, ROAD_SYSTEM) %>% tally()
nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5)
bike_intersection <- nPlot(n ~ CRASH_YEAR, group="INTERSECTION", data=bike_count_YEAR_INTERSECTION, type="multiBarChart",groupSpacing=5)
bike_intersection <- nPlot(n ~ CRASH_YEAR, group="INTERSECTION", data=bike_count_YEAR_INTERSECTION, type="multiBarChart",groupSpacing=5)
bike_intersection
bike_road_system <- nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5)
bike_road_system
bike_count_year <- bike_data %>% group_by(CRASH_YEAR) %>% tally()
bike_year <- nPlot(n ~ CRASH_YEAR, data=bike_count_YEAR, type="multiBarChart",groupSpacing=5)
bike_year
bike_count_YEAR <- bike_data %>% group_by(CRASH_YEAR) %>% tally()
bike_year <- nPlot(n ~ CRASH_YEAR, data=bike_count_YEAR, type="multiBarChart",groupSpacing=5)
bike_year
View(bike_count_year)
bike_count_YEAR_INTERSECTION_ROAD_SYSTEM <- bike_data %>% group_by(CRASH_YEAR,INTERSECTION,ROAD_SYSTEM) %>% tally()
View(bike_count_YEAR_INTERSECTION_ROAD_SYSTEM)
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="n", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"),group="INTERSECTION", size="ROAD_SYSTEM")
bike_count <- bike_data %>% group_by(CRASH_YEAR) %>% tally()
bike_count_YEAR_INTERSECTION_ROAD_SYSTEM <- bike_data %>% group_by(CRASH_YEAR,INTERSECTION,ROAD_SYSTEM) %>% tally()
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="n", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"),group="INTERSECTION", size="ROAD_SYSTEM")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="n", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"),group="ROAD_SYSTEM", size="INTERSECTION")
bike_year_hplot
bike_year
bike_year_hplot
bike_intersection
bike_road_system
bike_intersection
bike_road_system
bike_year
bike_road_system
bike_road_system
bike_road_system
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
library(rCharts)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
bike_road_system
nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
View(Fatal)
View(bike_count_YEAR_ROAD_SYSTEM)
nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
bike_road_system
bike_year
bike_intersection
bike_road_system
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="n", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"),group="ROAD_SYSTEM", size="INTERSECTION")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="n", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("bubble","scatter"),group="ROAD_SYSTEM", size="INTERSECTION")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("bubble","scatter"),group="INTERSECTION", size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("bubble","scatter"),group="INTERSECTION", size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("bubble","scatter"), size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"), size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type=c("line","bubble","scatter"), group_by("ROAD_SYSTEM"),size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR",y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="buble", size="n")
bike_year_hplot
bike_year_hplot <- hPlot(x="CRASH_YEAR",y="ROAD_SYSTEM", data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="buble")
bike_year_hplot
bike_year_hplot <- hPlot(ROAD_SYSTEM ~ YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="buble", size="n")
bike_year_hplot <- hPlot(ROAD_SYSTEM ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="buble", size="n")
bike_year_hplot
bike_year_hplot <- hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="buble", size="n")
bike_year_hplot
bike_year_hplot <- hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, type="scatter")
bike_year_hplot
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type="scatter")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type="bubble")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type="bubble", size="n")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line"), size="n")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line","scatter"), size="n")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line","scatter"), size="n", title="Number of Bike Accidents")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line","scatter"), size="n", title="Number of Bike Accidents",subtitle = "  -- by Road Systems")
View(bike_data)
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line","scatter"), size="n", title="Number of Bike Accidents",subtitle = "  -- by Road Systems")
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line"), size="n", title="Number of Bike Accidents",subtitle = "  -- by Road Systems")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing="20px")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week", subtitle=" - number of accidents")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week", subtitle=" - number of accidents")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
hPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
hPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
hPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="bar",title="Bike accident by day of week")
hPlot(year ~ nn, group="Crash.Day.Of.Week",data=Fatal, type="bar",title="Bike accident by day of week")
hPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="bar",title="Bike accident by day of week")
View(Fatal)
hPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="barchart",title="Bike accident by day of week")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
mPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",title="Bike accident by day of week")
nPlot(nn ~ year, group="Crash.Day.Of.Week",data=Fatal, type="multiBarChart",groupSpacing=5)
bike_road_system <- nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5)
bike_road_system
bike_road_system <- nPlot(n ~ CRASH_YEAR, group="ROAD_SYSTEM", data=bike_count_YEAR_ROAD_SYSTEM, type="multiBarChart",groupSpacing=5,title="Bike accidents by road system")
bike_road_system
hPlot(n ~ CRASH_YEAR, data=bike_count_YEAR_INTERSECTION_ROAD_SYSTEM, group="ROAD_SYSTEM", type=c("bubble","line"), size="n", title="Number of Bike Accidents",subtitle = "  -- by Road Systems")
